using CriptMonitoring.Application.Services;
using CriptMonitoring.Data.Interfaces;
using CriptMonitoring.Domain.Entity;
using MongoDB.Bson;
using Moq;
using Xunit;

namespace CriptMonitoring.Application.Test.Services;

public class BitstampServiceTest
{
    [Fact]
    public async Task SaveAsync_ValidOrderBookEntity_SavesSuccessfully()
    {
        // Arrange
        var mockRepository = new Mock<IBitstampRepository>();
        var service = new BitstampService(mockRepository.Object);
        var entity = new OrderBookEntity
        {
            Timestamp = new BsonTimestamp(DateTime.UtcNow.Millisecond),
            Microtimestamp = new BsonTimestamp(DateTime.UtcNow.Millisecond),
            bids = new List<PriceQuantityPairEntity>
                { new PriceQuantityPairEntity { usd = 100, cripto = (Decimal128)0.05123 } },
            asks = new List<PriceQuantityPairEntity>
                { new PriceQuantityPairEntity { usd = 200, cripto = (Decimal128)0.652 } }
        };

        // Act
        await service.SaveAsync(entity);

        // Assert
        mockRepository.Verify(r => r.InsertAsync(entity), Times.Once);
    }

    [Fact]
    public void GetStatics_ValidCripto_ReturnsCorrectStatistics()
    {
        // Arrange
        var mockRepository = new Mock<IBitstampRepository>();
        var service = new BitstampService(mockRepository.Object);
        string cripto = "BTC";
        var entity = new OrderBookEntity
        {
            asks = new List<PriceQuantityPairEntity>
            {
                new PriceQuantityPairEntity { usd = 100, cripto = (Decimal128)0.05123 },
                new PriceQuantityPairEntity { usd = 200, cripto = (Decimal128)0.652 }
            }
        };
        mockRepository.Setup(r => r.GetLast(cripto)).Returns(entity);
        mockRepository.Setup(it => it.GetByTime(cripto ,It.IsAny<decimal>())).Returns(new List<OrderBookEntity>()
        {
            new OrderBookEntity
            {
                asks = new List<PriceQuantityPairEntity>
                {
                    new PriceQuantityPairEntity { usd = 100, cripto = (Decimal128)0.05123 },
                    new PriceQuantityPairEntity { usd = 200, cripto = (Decimal128)0.652 }
                }
            }
        });

        // Act
        var result = service.GetStatics("BTC");

        // Assert
        Assert.Equal(150, result.AvgPrice);
        Assert.Equal(200, result.MaxPrice);
        Assert.Equal(100, result.MinPrice);
    }

    [Fact]
    public async Task ProcessCripto_ValidMessage_ProcessesSuccessfully()
    {
        // Arrange
        var mockRepository = new Mock<IBitstampRepository>();
        var service = new BitstampService(mockRepository.Object);
        var message = @"{""data"":{""timestamp"":""1725972973"",""microtimestamp"":""1725972973463320"",""bids"":[[""57233"",""0.00064647""],[""57227"",""0.17469141""],[""57221"",""0.33203787""],[""57219"",""1.00455655""],[""57218"",""1.03924116""],[""57213"",""0.83068790""],[""57212"",""1.74785676""],[""57211"",""0.92700000""],[""57206"",""0.06989895""],[""57199"",""0.67030486""],[""57198"",""1.74828280""],[""57197"",""0.95900000""],[""57183"",""0.22500000""],[""57178"",""1.74890326""],[""57158"",""0.22500000""],[""57155"",""0.00023196""],[""57151"",""1.84864096""],[""57146"",""2.27265019""],[""57144"",""0.00219553""],[""57140"",""0.22500000""],[""57138"",""0.02031749""],[""57137"",""0.00219589""],[""57134"",""1.75025858""],[""57132"",""0.22500000""],[""57130"",""0.00219625""],[""57124"",""0.22500000""],[""57123"",""0.00219661""],[""57122"",""1.33787808""],[""57118"",""0.22500000""],[""57116"",""0.00219697""],[""57112"",""0.22500000""],[""57110"",""0.00188339""],[""57103"",""0.00219763""],[""57101"",""0.01670990""],[""57100"",""2.84728868""],[""57098"",""0.00023230""],[""57096"",""0.00219799""],[""57094"",""0.22500000""],[""57092"",""2.60000000""],[""57090"",""1.64989440""],[""57089"",""0.00219835""],[""57088"",""0.22500000""],[""57087"",""1.67340096""],[""57082"",""0.22719871""],[""57079"",""3.66000000""],[""57076"",""0.22500000""],[""57075"",""33.30399568""],[""57072"",""4.38037949""],[""57070"",""0.22500000""],[""57068"",""0.59830892""],[""57064"",""0.22500000""],[""57062"",""0.51291111""],[""57061"",""3.87700000""],[""57058"",""0.22500000""],[""57055"",""0.59849069""],[""57052"",""0.22500000""],[""57048"",""0.59638815""],[""57046"",""0.22500000""],[""57041"",""0.59648573""],[""57040"",""0.22523673""],[""57034"",""0.82158334""],[""57032"",""5.00000000""],[""57028"",""0.22500000""],[""57027"",""0.59668098""],[""57026"",""0.02062993""],[""57022"",""0.22500000""],[""57021"",""0.51151559""],[""57016"",""0.22500000""],[""57014"",""0.59686239""],[""57012"",""0.00912776""],[""57010"",""0.22500000""],[""57007"",""0.59696011""],[""57004"",""0.22500000""],[""57002"",""2.18283410""],[""57000"",""0.60582978""],[""56998"",""0.22500000""],[""56993"",""6.07651259""],[""56992"",""0.22500000""],[""56986"",""0.59725343""],[""56983"",""0.00023301""],[""56980"",""0.51200634""],[""56979"",""3.49638490""],[""56973"",""0.00175521""],[""56947"",""7.24700000""],[""56927"",""0.00022925""],[""56922"",""8.78383761""],[""56921"",""3.32207568""],[""56890"",""0.06443714""],[""56870"",""0.00023370""],[""56864"",""2.20939488""],[""56856"",""7.69300000""],[""56813"",""0.00023406""],[""56811"",""0.25000000""],[""56756"",""0.00023440""],[""56728"",""1.10547360""],[""56699"",""0.00023475""],[""56661"",""0.00882441""],[""56643"",""0.00023098""],[""56586"",""0.00023546""],[""56530"",""0.00023166""]],""asks"":[[""57234"",""0.34030911""],[""57235"",""0.10000000""],[""57240"",""0.61517757""],[""57241"",""1.74702319""],[""57243"",""0.10000000""],[""57244"",""0.10000000""],[""57245"",""0.00066381""],[""57246"",""0.22500000""],[""57248"",""0.69875500""],[""57252"",""0.22500000""],[""57254"",""1.74662374""],[""57256"",""0.50000000""],[""57262"",""0.64959088""],[""57263"",""1.01435208""],[""57269"",""0.22500000""],[""57270"",""0.06987649""],[""57272"",""0.84200000""],[""57275"",""1.74597106""],[""57276"",""0.22500000""],[""57283"",""0.27749000""],[""57286"",""0.62200000""],[""57295"",""0.22500000""],[""57306"",""0.08725380""],[""57307"",""1.97001476""],[""57317"",""2.27265019""],[""57340"",""0.22500000""],[""57343"",""0.00035000""],[""57345"",""1.36715040""],[""57346"",""1.74380226""],[""57352"",""0.22500000""],[""57354"",""1.70466912""],[""57364"",""0.22500000""],[""57374"",""6.94939220""],[""57376"",""0.22500000""],[""57386"",""2.62228868""],[""57388"",""0.22500000""],[""57393"",""1.63625616""],[""57394"",""0.22500000""],[""57395"",""3.85400000""],[""57418"",""0.22500000""],[""57423"",""0.00469748""],[""57426"",""5.65731936""],[""57430"",""0.22500000""],[""57432"",""7.25600000""],[""57436"",""3.49638490""],[""57441"",""0.22500000""],[""57442"",""0.00023075""],[""57467"",""0.01802308""],[""57469"",""0.08832683""],[""57474"",""0.59272551""],[""57477"",""0.22500000""],[""57481"",""0.59262930""],[""57483"",""0.22500000""],[""57488"",""0.59253311""],[""57489"",""0.22500000""],[""57495"",""0.81743691""],[""57499"",""0.00023042""],[""57500"",""0.23786785""],[""57501"",""0.22673910""],[""57502"",""0.59234074""],[""57507"",""0.22500000""],[""57508"",""0.50764707""],[""57513"",""0.22500000""],[""57515"",""0.59216224""],[""57518"",""0.00592139""],[""57519"",""0.22668188""],[""57522"",""0.59206537""],[""57525"",""0.22500000""],[""57528"",""0.00019135""],[""57529"",""0.59197000""],[""57536"",""0.59187397""],[""57541"",""3.35134800""],[""57543"",""0.59177798""],[""57550"",""0.59168200""],[""57557"",""0.59182016""],[""57563"",""8.68613904""],[""57564"",""0.59149018""],[""57571"",""0.59139429""],[""57578"",""7.68400000""],[""57601"",""0.00173608""],[""57612"",""0.00100000""],[""57614"",""0.00022974""],[""57638"",""2.17457856""],[""57672"",""0.00023341""],[""57690"",""0.00140000""],[""57694"",""0.03943975""],[""57701"",""0.00173307""],[""57730"",""0.00023306""],[""57737"",""0.00120000""],[""57758"",""1.17000000""],[""57777"",""0.03000000""],[""57787"",""0.00022870""],[""57801"",""0.00173007""],[""57836"",""0.00170000""],[""57845"",""0.00023237""],[""57850"",""0.10000000""],[""57856"",""0.00200000""],[""57901"",""0.00172708""],[""57903"",""0.00023202""],[""57937"",""1.09604880""]]},""channel"":""order_book_btcusd"",""event"":""data""}";
        var cripto = "BTC";

        // Act
        await service.ProcessCripto(message, cripto);

        // Assert
        mockRepository.Verify(r => r.InsertAsync(It.Is<OrderBookEntity>(e => e.bids.Count == 100 && e.asks.Count == 100)),
            Times.Once);
    }

    [Fact]
    public void GetStatics_NoData_ReturnsDefaultPricesDto()
    {
        // Arrange
        var mockRepository = new Mock<IBitstampRepository>();
        var service = new BitstampService(mockRepository.Object);
        mockRepository.Setup(r => r.GetLast(It.IsAny<string>())).Returns((OrderBookEntity)null);

        // Act
        var result = service.GetStatics("BTC");

        // Assert
        Assert.Equal(0, result.AvgPrice);
        Assert.Equal(0, result.MaxPrice);
        Assert.Equal(0, result.MinPrice);
        Assert.Equal(0, result.AvgLastFiveSeconds);
    }
}